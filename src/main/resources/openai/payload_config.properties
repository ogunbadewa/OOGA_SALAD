payload.template=I have a JavaFX remake of BabaIsYou, a popular puzzle game. The application loads in a level configuration with a JSON file. I want to use your generative abilities to randomly create a level. The following string outlines the format of a json: {'levelName':'test','description':'test','gridSize':{'rows':'12','columns':'12'},'grid':{'cells':[[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','FlagTextBlock'],['EmptyVisualBlock','IsTextBlock'],['EmptyVisualBlock','WinTextBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','FlagVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','BabaTextBlock'],['EmptyVisualBlock','IsTextBlock'],['EmptyVisualBlock','YouTextBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','BabaVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','WallVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','WinTextBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock','WallTextBlock'],['EmptyVisualBlock','IsTextBlock'],['EmptyVisualBlock','StopTextBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']],[['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock'],['EmptyVisualBlock']]],'metadata':{'author':'test','difficulty':'Medium','hint':'test'}}}. Be careful to follow the JSON format EXACTLY (ensure 'metadata' is inside 'grid' key). The rows and cols must be a number between 5 and 15. The grid is a 3D array, where each cell in the grid has a stack of blocks (there must be a block in every cell and the first block must be an EmptyVisualBlock). Here are the options for types of blocks: [BabaTextBlock, EmptyTextBlock, FlagTextBlock, IsTextBlock, PushTextBlock, RockTextBlock, StopTextBlock, WallTextBlock, WinTextBlock, YouTextBlock, BabaVisualBlock, EmptyVisualBlock, FlagVisualBlock, RockVisualBlock, WallVisualBlock, LavaVisualBlock, MeltTextBlock, HotTextBlock, LavaTextBlock]. Be careful to follow the JSON format EXACTLY (ensure 'metadata' is inside 'grid' key). The rows and cols must be a number between 5 and 15. The grid is a 3D array, where each cell in the grid has a stack of blocks (there must be a block in every cell and the first block must be an EmptyVisualBlock). Here are the options for types of blocks: [BabaTextBlock, EmptyTextBlock, FlagTextBlock, IsTextBlock, PushTextBlock, RockTextBlock, StopTextBlock, WallTextBlock, WinTextBlock, YouTextBlock, BabaVisualBlock, EmptyVisualBlock, FlagVisualBlock, RockVisualBlock, WallVisualBlock, LavaVisualBlock, MeltTextBlock, HotTextBlock, LavaTextBlock]. The text blocks are word blocks in the game. The visual blocks are visual elements in the game. The text blocks for BabaTextBlock, IsTextBlock, and YouTextBlock must be connected in a row. There must be at least one BabaVisualBlock and at least one FlagVisualBlock. The text blocks for FlagTextBlock, IsTextBlock, and WinTextBlock must be connected in a row. somewhere on the grid as well, so that the game is controllable and winnable. Create a JSON configuration for a creative BabaIsYou level that makes use of the rules of the game and is fun to play. Generate only the json such that I can automatically parse your response into my application. Do not respond with anything that is not valid JSON.